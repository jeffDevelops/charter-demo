[{"/Users/jefferyreynolds/temp-spectrum/src/App.tsx":"1","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Table.tsx":"2","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/Restaurants.tsx":"3","/Users/jefferyreynolds/temp-spectrum/src/reportWebVitals.ts":"4","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/TableTags.tsx":"5","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/restaurantSchema.tsx":"6","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/styled.ts":"7","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/styled.ts":"8","/Users/jefferyreynolds/temp-spectrum/src/_styled/Tag.ts":"9","/Users/jefferyreynolds/temp-spectrum/src/index.tsx":"10","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/usePagination.ts":"11","/Users/jefferyreynolds/temp-spectrum/src/_components/Input/Input.tsx":"12","/Users/jefferyreynolds/temp-spectrum/src/_components/Input/styled.ts":"13","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/useFilters.ts":"14"},{"size":150,"mtime":1608144731220,"results":"15","hashOfConfig":"16"},{"size":3050,"mtime":1608147310999,"results":"17","hashOfConfig":"16"},{"size":4706,"mtime":1608163577692,"results":"18","hashOfConfig":"16"},{"size":425,"mtime":1608056786976,"results":"19","hashOfConfig":"16"},{"size":281,"mtime":1608106158267,"results":"20","hashOfConfig":"16"},{"size":812,"mtime":1608080294766,"results":"21","hashOfConfig":"16"},{"size":2967,"mtime":1608109213663,"results":"22","hashOfConfig":"16"},{"size":348,"mtime":1608162315695,"results":"23","hashOfConfig":"16"},{"size":317,"mtime":1608107919528,"results":"24","hashOfConfig":"16"},{"size":500,"mtime":1608056786975,"results":"25","hashOfConfig":"16"},{"size":3239,"mtime":1608103864599,"results":"26","hashOfConfig":"16"},{"size":789,"mtime":1608163125179,"results":"27","hashOfConfig":"16"},{"size":1596,"mtime":1608163134240,"results":"28","hashOfConfig":"16"},{"size":3616,"mtime":1608159664770,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9qz4d5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jefferyreynolds/temp-spectrum/src/App.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Table.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/Restaurants.tsx",["60"],"/Users/jefferyreynolds/temp-spectrum/src/reportWebVitals.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/TableTags.tsx",[],["61","62"],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/restaurantSchema.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/styled.ts",["63"],"/Users/jefferyreynolds/temp-spectrum/src/_styled/Tag.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/index.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/usePagination.ts",["64"],"import { useReducer, Reducer, useEffect } from 'react'\nimport { Row, PaginationOptions } from '../Table.d'\n\ninterface PageState {\n  resultsPerPage: number\n  resultsStartIndex: number\n  resultsEndIndex: number\n  resultsCount: number\n}\n\ntype PageAction =\n  | {\n      /* Consolidate all of the logic for managing the page in one action */\n      type: 'UPDATE_PAGE'\n      value: number\n    }\n  | {\n      /* Expose an action to reset the pagination upon changes to searches / filters */\n      type: 'RESET_PAGE'\n    }\n  | {\n      /* TODO: (Stretch goal) Allow the user to change the page size */\n      type: 'UPDATE_PAGE_SIZE'\n      value: number\n    }\n\n/**\n *  Resiliently compute the initial state based on\n *  potentially unreliable parameters, such as\n *  from the URL, which could be malformed or shared\n *  after data has been added/removed.\n */\nconst initialState = <T extends {}>(\n  options: PaginationOptions,\n  rows: Row<T>[],\n): PageState => ({\n  resultsStartIndex: (() => {\n    const firstIndex =\n      options.initialPage * options.initialResultsPerPage\n    if (rows.length < firstIndex) {\n      const possiblePages =\n        rows.length / options.initialResultsPerPage\n      /**\n       * If the possible pages is an integer with no remainder,\n       * one page must be subtracted to the last page--otherwise\n       * it's a partial last page\n       */\n      return possiblePages / Math.floor(possiblePages) === 1\n        ? possiblePages - 1\n        : Math.floor(possiblePages)\n    }\n    return (\n      options.initialPage * options.initialResultsPerPage || 0\n    )\n  })(),\n  resultsEndIndex: (() => {\n    const lastIndex =\n      options.initialPage * options.initialResultsPerPage +\n      options.initialResultsPerPage\n    if (rows.length < lastIndex) return rows.length\n    return lastIndex\n  })(),\n  resultsPerPage: options.initialResultsPerPage,\n  resultsCount: rows.length,\n})\n\nconst paginationReducer: Reducer<PageState, PageAction> = <\n  T extends {}\n>(\n  prevState: PageState,\n  action: PageAction,\n) => {\n  switch (action.type) {\n    case 'UPDATE_PAGE':\n      return {\n        ...prevState,\n        resultsStartIndex:\n          prevState.resultsPerPage * action.value,\n        resultsEndIndex:\n          prevState.resultsPerPage * action.value +\n          prevState.resultsPerPage,\n        resultsCount: prevState.resultsCount,\n      }\n    case 'UPDATE_PAGE_SIZE':\n      return {\n        ...prevState,\n        resultsEndIndex: Math.min(\n          prevState.resultsStartIndex + action.value,\n          prevState.resultsCount,\n        ),\n      }\n    case 'RESET_PAGE':\n      return {\n        ...prevState,\n        resultsStartIndex: 0,\n        resultsEndIndex: Math.min(\n          0 + prevState.resultsPerPage,\n          prevState.resultsCount,\n        ),\n      }\n    default:\n      return prevState\n  }\n}\n\nexport const usePagination = <T extends {}>(\n  options: PaginationOptions,\n  rows: Row<T>[],\n) => {\n  const [pageState, dispatchPageAction] = useReducer(\n    paginationReducer,\n    initialState(options, rows),\n  )\n\n  // If the resultsCount changes, reset the pagination\n  useEffect(() => {\n    dispatchPageAction({ type: 'RESET_PAGE' })\n  }, [rows.length])\n\n  return {\n    ...pageState,\n    dispatchPageAction,\n  }\n}\n","/Users/jefferyreynolds/temp-spectrum/src/_components/Input/Input.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Input/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/useFilters.ts",["65","66"],{"ruleId":"67","severity":1,"message":"68","line":83,"column":24,"nodeType":"69","messageId":"70","endLine":83,"endColumn":44},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":1,"column":18,"nodeType":"69","messageId":"70","endLine":1,"endColumn":21},{"ruleId":"67","severity":1,"message":"76","line":68,"column":3,"nodeType":"69","messageId":"70","endLine":68,"endColumn":4},{"ruleId":"67","severity":1,"message":"77","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"78","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},"@typescript-eslint/no-unused-vars","'dispatchFilterAction' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'css' is defined but never used.","'T' is defined but never used.","'React' is defined but never used.","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation"]