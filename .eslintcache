[{"/Users/jefferyreynolds/temp-spectrum/src/App.tsx":"1","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Table.tsx":"2","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/Restaurants.tsx":"3","/Users/jefferyreynolds/temp-spectrum/src/reportWebVitals.ts":"4","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/restaurantSchema.tsx":"5","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/styled.ts":"6","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/styled.ts":"7","/Users/jefferyreynolds/temp-spectrum/src/_styled/Tag.ts":"8","/Users/jefferyreynolds/temp-spectrum/src/index.tsx":"9","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/usePagination.ts":"10","/Users/jefferyreynolds/temp-spectrum/src/_components/Input/Input.tsx":"11","/Users/jefferyreynolds/temp-spectrum/src/_components/Input/styled.ts":"12","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/useFilters.ts":"13","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/config/FilterableGenres.ts":"14","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/config/FilterableStates.ts":"15","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/EmptyState/EmptyState.tsx":"16","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/EmptyState/styled.ts":"17","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/LoadingState/LoadingState.tsx":"18","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/LoadingState/styled.ts":"19","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Select/Select.tsx":"20","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/useScrollToEffect.ts":"21","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/TableTags/TableTags.tsx":"22"},{"size":150,"mtime":1608144731220,"results":"23","hashOfConfig":"24"},{"size":5548,"mtime":1608316923501,"results":"25","hashOfConfig":"24"},{"size":5905,"mtime":1608319862661,"results":"26","hashOfConfig":"24"},{"size":425,"mtime":1608056786976,"results":"27","hashOfConfig":"24"},{"size":1116,"mtime":1608318521321,"results":"28","hashOfConfig":"24"},{"size":3633,"mtime":1608317842566,"results":"29","hashOfConfig":"24"},{"size":756,"mtime":1608274496687,"results":"30","hashOfConfig":"24"},{"size":317,"mtime":1608272956212,"results":"31","hashOfConfig":"24"},{"size":500,"mtime":1608056786975,"results":"32","hashOfConfig":"24"},{"size":3363,"mtime":1608274492345,"results":"33","hashOfConfig":"24"},{"size":845,"mtime":1608320304259,"results":"34","hashOfConfig":"24"},{"size":1642,"mtime":1608272860416,"results":"35","hashOfConfig":"24"},{"size":3499,"mtime":1608274441935,"results":"36","hashOfConfig":"24"},{"size":656,"mtime":1608244276888,"results":"37","hashOfConfig":"24"},{"size":803,"mtime":1608244365076,"results":"38","hashOfConfig":"24"},{"size":466,"mtime":1608318427480,"results":"39","hashOfConfig":"24"},{"size":626,"mtime":1608269510620,"results":"40","hashOfConfig":"24"},{"size":304,"mtime":1608268524246,"results":"41","hashOfConfig":"24"},{"size":441,"mtime":1608268863450,"results":"42","hashOfConfig":"24"},{"size":3402,"mtime":1608321707307,"results":"43","hashOfConfig":"24"},{"size":348,"mtime":1608315914738,"results":"44","hashOfConfig":"24"},{"size":284,"mtime":1608317895779,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9qz4d5",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jefferyreynolds/temp-spectrum/src/App.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Table.tsx",["94"],"import React, {\n  useEffect,\n  useRef,\n  Dispatch,\n  useMemo,\n} from 'react'\nimport {\n  PaginationOptions,\n  Column,\n  Row,\n  FilterState,\n  FilterActions,\n} from './Table.d'\nimport {\n  Card,\n  Scrollable,\n  Table as StyledTable,\n  THead,\n  TH,\n  ColumnControls,\n  TR,\n  TD,\n  Pagination,\n  PaginationButton,\n  PaginationInfo,\n  LeftChevron,\n  RightChevron,\n} from './styled'\nimport { usePagination } from './hooks/usePagination'\nimport Select from './Select/Select'\nimport EmptyState from './EmptyState/EmptyState'\nimport LoadingState from './LoadingState/LoadingState'\nimport { useScrollToEffect } from './hooks/useScrollToEffect'\n\nexport interface TableProps<T extends {}> {\n  paginationOptions: PaginationOptions\n  filterOptions: {\n    filterState: FilterState\n    dispatchFilterAction: Dispatch<FilterActions>\n  }\n  schema: Column<T>[]\n  rows: Row<T>[]\n  progress: number // integer percentage value\n}\n\nconst Table = <T extends {}>({\n  schema,\n  rows,\n  paginationOptions,\n  filterOptions,\n  progress,\n}: TableProps<Row<T>>) => {\n  const {\n    resultsStartIndex,\n    resultsEndIndex,\n    resultsCount,\n    resultsPerPage,\n    dispatchPageAction,\n  } = usePagination(paginationOptions, rows)\n\n  const tableRef = useRef<HTMLTableElement>(null)\n\n  // If the pagination page changes, scroll to the top of the page\n  useScrollToEffect(tableRef, [\n    resultsStartIndex,\n    resultsEndIndex,\n  ])\n\n  const page = useMemo(() => {\n    return rows.slice(resultsStartIndex, resultsEndIndex) // slice end of range is non-inclusive\n  }, [resultsStartIndex, resultsEndIndex, rows])\n\n  return (\n    <Card ref={tableRef}>\n      <Scrollable>\n        <StyledTable>\n          <THead>\n            <TR data-testid=\"table_headings\">\n              {schema.map(({ key, heading, cellStyles }) => (\n                <TH style={cellStyles} key={key}>\n                  {heading}\n                </TH>\n              ))}\n            </TR>\n            <TR>\n              {schema.map(({ key, field }) => {\n                if (!filterOptions.filterState[field as string])\n                  return <ColumnControls key={field as string} />\n\n                // If \"All\", no filter values are selected; otherwise derive state from individual values\n                const value = filterOptions.filterState[\n                  field as string\n                ].all\n                  ? []\n                  : Object.keys(\n                      filterOptions.filterState[field as string]\n                        .values,\n                    ).reduce(\n                      (\n                        acc: {\n                          label: string\n                          value: string\n                        }[],\n                        key,\n                      ) => {\n                        if (\n                          filterOptions.filterState[\n                            field as string\n                          ].values[key]\n                        ) {\n                          acc.push({\n                            label: key,\n                            value: key,\n                          })\n                        }\n                        return acc\n                      },\n                      [],\n                    )\n\n                return (\n                  <ColumnControls key={key}>\n                    <Select\n                      dispatchFilterAction={\n                        filterOptions.dispatchFilterAction\n                      }\n                      filterState={filterOptions.filterState}\n                      field={field}\n                      value={value}\n                    />\n                  </ColumnControls>\n                )\n              })}\n            </TR>\n            <TR />\n          </THead>\n          <tbody data-testid=\"table_body\">\n            {page.map(row => {\n              return (\n                <TR\n                  key={row.id}\n                  incompletePage={page.length !== resultsPerPage}\n                >\n                  {schema.map(({ field, cellDisplayOption }) => (\n                    <TD key={field.toString()}>\n                      {cellDisplayOption === 'RAW'\n                        ? row[field]\n                        : cellDisplayOption(row)}\n                    </TD>\n                  ))}\n                </TR>\n              )\n            })}\n          </tbody>\n        </StyledTable>\n        <LoadingState progress={progress} />\n        {progress === 100 && resultsCount === 0 && (\n          <EmptyState />\n        )}\n      </Scrollable>\n      <Pagination>\n        <PaginationButton\n          disabled={resultsStartIndex === 0}\n          onClick={() =>\n            dispatchPageAction({\n              type: 'DECREMENT',\n            })\n          }\n        >\n          <LeftChevron disabled={resultsStartIndex === 0} />\n        </PaginationButton>\n        <PaginationInfo>\n          Results{' '}\n          {resultsCount === 0 ? 0 : resultsStartIndex + 1} -{' '}\n          {Math.min(resultsEndIndex, resultsCount)} of{' '}\n          {resultsCount}\n        </PaginationInfo>\n        <PaginationButton\n          disabled={\n            Math.min(resultsEndIndex, rows.length) ===\n            rows.length\n          }\n          onClick={() =>\n            dispatchPageAction({\n              type: 'INCREMENT',\n            })\n          }\n        >\n          <RightChevron\n            disabled={\n              Math.min(resultsEndIndex, rows.length) ===\n              rows.length\n            }\n          />\n        </PaginationButton>\n      </Pagination>\n    </Card>\n  )\n}\n\nexport default Table\n",["95","96"],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/Restaurants.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/reportWebVitals.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/restaurantSchema.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_styled/Tag.ts",[],["97","98"],"/Users/jefferyreynolds/temp-spectrum/src/index.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/usePagination.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Input/Input.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Input/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/useFilters.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/config/FilterableGenres.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/config/FilterableStates.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/EmptyState/EmptyState.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/EmptyState/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/LoadingState/LoadingState.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/LoadingState/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Select/Select.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/useScrollToEffect.ts",["99","100"],"import { useEffect, RefObject } from 'react'\n\nexport const useScrollToEffect = (\n  ref: Partial<RefObject<HTMLElement>>,\n  deps: unknown[],\n) => {\n  useEffect(() => {\n    if (\n      ref.current &&\n      typeof ref.current.scrollTo !== 'undefined'\n    )\n      ref.current.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      })\n  }, deps)\n}\n","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/TableTags/TableTags.tsx",[],{"ruleId":"101","severity":1,"message":"102","line":2,"column":3,"nodeType":"103","messageId":"104","endLine":2,"endColumn":12},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":16,"column":6,"nodeType":"103","endLine":16,"endColumn":10},{"ruleId":"111","severity":1,"message":"113","line":16,"column":6,"nodeType":"103","endLine":16,"endColumn":10,"suggestions":"114"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [ref]",{"range":"120","text":"121"},[340,344],"[ref]"]