[{"/Users/jefferyreynolds/temp-spectrum/src/App.tsx":"1","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Table.tsx":"2","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/Restaurants.tsx":"3","/Users/jefferyreynolds/temp-spectrum/src/reportWebVitals.ts":"4","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/TableTags.tsx":"5","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/restaurantSchema.tsx":"6","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/styled.ts":"7","/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/styled.ts":"8","/Users/jefferyreynolds/temp-spectrum/src/_styled/Tag.ts":"9","/Users/jefferyreynolds/temp-spectrum/src/index.tsx":"10","/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/usePagination.ts":"11"},{"size":150,"mtime":1608080833443,"results":"12","hashOfConfig":"13"},{"size":3122,"mtime":1608107652785,"results":"14","hashOfConfig":"13"},{"size":2722,"mtime":1608144486434,"results":"15","hashOfConfig":"13"},{"size":425,"mtime":1608056786976,"results":"16","hashOfConfig":"13"},{"size":281,"mtime":1608106158267,"results":"17","hashOfConfig":"13"},{"size":812,"mtime":1608080294766,"results":"18","hashOfConfig":"13"},{"size":2967,"mtime":1608109213663,"results":"19","hashOfConfig":"13"},{"size":468,"mtime":1608144653402,"results":"20","hashOfConfig":"13"},{"size":317,"mtime":1608107919528,"results":"21","hashOfConfig":"13"},{"size":500,"mtime":1608056786975,"results":"22","hashOfConfig":"13"},{"size":3239,"mtime":1608103864599,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9qz4d5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/jefferyreynolds/temp-spectrum/src/App.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/Table.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/Restaurants.tsx",["48","49","50","51"],"/Users/jefferyreynolds/temp-spectrum/src/reportWebVitals.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/TableTags.tsx",[],["52","53"],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/restaurantSchema.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_views/Restaurants/styled.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/_styled/Tag.ts",[],"/Users/jefferyreynolds/temp-spectrum/src/index.tsx",[],"/Users/jefferyreynolds/temp-spectrum/src/_components/Table/hooks/usePagination.ts",["54"],"import { useReducer, Reducer, useEffect } from 'react'\nimport { Row, PaginationOptions } from '../Table.d'\n\ninterface PageState {\n  resultsPerPage: number\n  resultsStartIndex: number\n  resultsEndIndex: number\n  resultsCount: number\n}\n\ntype PageAction =\n  | {\n      /* Consolidate all of the logic for managing the page in one action */\n      type: 'UPDATE_PAGE'\n      value: number\n    }\n  | {\n      /* Expose an action to reset the pagination upon changes to searches / filters */\n      type: 'RESET_PAGE'\n    }\n  | {\n      /* TODO: (Stretch goal) Allow the user to change the page size */\n      type: 'UPDATE_PAGE_SIZE'\n      value: number\n    }\n\n/**\n *  Resiliently compute the initial state based on\n *  potentially unreliable parameters, such as\n *  from the URL, which could be malformed or shared\n *  after data has been added/removed.\n */\nconst initialState = <T extends {}>(\n  options: PaginationOptions,\n  rows: Row<T>[],\n): PageState => ({\n  resultsStartIndex: (() => {\n    const firstIndex =\n      options.initialPage * options.initialResultsPerPage\n    if (rows.length < firstIndex) {\n      const possiblePages =\n        rows.length / options.initialResultsPerPage\n      /**\n       * If the possible pages is an integer with no remainder,\n       * one page must be subtracted to the last page--otherwise\n       * it's a partial last page\n       */\n      return possiblePages / Math.floor(possiblePages) === 1\n        ? possiblePages - 1\n        : Math.floor(possiblePages)\n    }\n    return (\n      options.initialPage * options.initialResultsPerPage || 0\n    )\n  })(),\n  resultsEndIndex: (() => {\n    const lastIndex =\n      options.initialPage * options.initialResultsPerPage +\n      options.initialResultsPerPage\n    if (rows.length < lastIndex) return rows.length\n    return lastIndex\n  })(),\n  resultsPerPage: options.initialResultsPerPage,\n  resultsCount: rows.length,\n})\n\nconst paginationReducer: Reducer<PageState, PageAction> = <\n  T extends {}\n>(\n  prevState: PageState,\n  action: PageAction,\n) => {\n  switch (action.type) {\n    case 'UPDATE_PAGE':\n      return {\n        ...prevState,\n        resultsStartIndex:\n          prevState.resultsPerPage * action.value,\n        resultsEndIndex:\n          prevState.resultsPerPage * action.value +\n          prevState.resultsPerPage,\n        resultsCount: prevState.resultsCount,\n      }\n    case 'UPDATE_PAGE_SIZE':\n      return {\n        ...prevState,\n        resultsEndIndex: Math.min(\n          prevState.resultsStartIndex + action.value,\n          prevState.resultsCount,\n        ),\n      }\n    case 'RESET_PAGE':\n      return {\n        ...prevState,\n        resultsStartIndex: 0,\n        resultsEndIndex: Math.min(\n          0 + prevState.resultsPerPage,\n          prevState.resultsCount,\n        ),\n      }\n    default:\n      return prevState\n  }\n}\n\nexport const usePagination = <T extends {}>(\n  options: PaginationOptions,\n  rows: Row<T>[],\n) => {\n  const [pageState, dispatchPageAction] = useReducer(\n    paginationReducer,\n    initialState(options, rows),\n  )\n\n  // If the resultsCount changes, reset the pagination\n  useEffect(() => {\n    dispatchPageAction({ type: 'RESET_PAGE' })\n  }, [rows.length])\n\n  return {\n    ...pageState,\n    dispatchPageAction,\n  }\n}\n",{"ruleId":"55","severity":1,"message":"56","line":11,"column":8,"nodeType":"57","messageId":"58","endLine":11,"endColumn":14},{"ruleId":"55","severity":1,"message":"59","line":47,"column":9,"nodeType":"57","messageId":"58","endLine":47,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":73,"column":6,"nodeType":"62","endLine":73,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":2,"message":"65","line":80,"column":8,"nodeType":"66","endLine":80,"endColumn":13},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"55","severity":1,"message":"71","line":68,"column":3,"nodeType":"57","messageId":"58","endLine":68,"endColumn":4},"@typescript-eslint/no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'mockAPI' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRestaurants'. Either include it or remove the dependency array.","ArrayExpression",["72"],"react/jsx-no-undef","'Input' is not defined.","JSXIdentifier","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'T' is defined but never used.",{"desc":"75","fix":"76"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchRestaurants]",{"range":"77","text":"78"},[2078,2080],"[fetchRestaurants]"]